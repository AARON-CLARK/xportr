% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_core_vars.R
\name{check_core}
\alias{check_core}
\title{Check variables according to their 'Core' category value.}
\usage{
check_core(
  spec.,
  dataset.,
  ds_name. = "",
  var_categ. = c("req", "exp", "perm", "cond")
)
}
\arguments{
\item{spec.}{A table-like object, containing actual SDTM or ADaM specification information.}

\item{dataset.}{Path do dataset, when var check is required.}

\item{ds_name.}{Optional; by default takes name of the dataset without extension; useful when dataset filename
differs from actual name of dataset (i.e. if ADAE file is named 'adae_final.xpt' etc.)}

\item{var_categ.}{Vector with names of 'Core' vategories to check; default: c("req", "exp", "perm", "cond").}
}
\value{
Nothing
}
\description{
Do checks on CDISC compliance for each variable of the dataset, depending on its 'Core' category value. Values of
'Core' category includes: Required, Expected, Permissible and Conditionally Required. Refer to https://www.cdisc.org/
for more details. If checks passed - will run silent, otherwise - throw errors or warnings.
}
\examples{
Consider having specifications or spec metadata in place ("ADaM_spec.xlsx"). Let ADAE be dataset we want to check.

d <- load_spec("ADaM_spec.xlsx") \%>\%
 check_core("adae.xpt")

If filename is different for any reason (like dataset had to be split to meet size expectations).

d <- load_spec("analysis_metadata.xlsx") \%>\%
 check_core("mo1.xpt", ds_name = "MO")

d <- load_spec("tests/testthat/files/ADaM_spec.xlsx") \%>\%
 check_core("adae.xpt", ds_name = "ADAE")

Using 'datadef' tools:
dd <- define_to_DataDef(path_to_xml_file)
check_core(dd$ds_spec, "adae.xpt")

}
