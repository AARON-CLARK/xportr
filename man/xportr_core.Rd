% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{xportr_core}
\alias{xportr_core}
\title{Check variables according to their 'Core' category value.}
\usage{
xportr_core(
  .df,
  datadef,
  ds_name. = "",
  var_categ. = c("req", "exp", "perm", "cond")
)
}
\arguments{
\item{.df}{Path do dataset, when var check is required.}

\item{datadef}{A table-like object, containing actual SDTM or ADaM specification information.}

\item{ds_name.}{Optional; by default takes name of the dataset without extension; useful when dataset filename
differs from actual name of dataset (i.e. if ADAE file is named 'adae_final.xpt' etc.)}

\item{var_categ.}{Vector with names of 'Core' vategories to check; default: c("req", "exp", "perm", "cond").}
}
\value{
Nothing
}
\description{
Do checks on CDISC compliance for each variable of the dataset, depending on its 'Core' category value. Values of
'Core' category includes: Required, Expected, Permissible and Conditionally Required. Refer to https://www.cdisc.org/
for more details. If checks passed - will run silent, otherwise - throw errors or warnings.
}
\examples{
# Consider having specifications or spec metadata in place ("ADaM_datadefxlsx").
# Let ADAE be dataset we want to check.

#d <- load_spec("ADaM_datadefxlsx") \%>\%
 #xportr_core("adae.xpt")

# If filename is different for any reason (like dataset had to be split to
# meet size expectations).

#d <- load_spec("analysis_metadata.xlsx") \%>\%
 #xportr_core("mo1.xpt", ds_name = "MO")

#d <- load_spec("tests/testthat/files/ADaM_datadefxlsx") \%>\%
 #xportr_core("adae.xpt", ds_name = "ADAE")

# Using 'datadef' tools:
#dd <- define_to_DataDef(path_to_xml_file)
#xportr_core(dd$ds_spec, "adae.xpt")

}
